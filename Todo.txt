1. Create MySql Database and connection with app.                               COMPLETED *******
2. Create Word entity(CRUD) and all necessary layers.                           COMPLETED
    - debug WordType in WordServiceImpl                                         COMPLETED
    - check if we load all word list when getting word from database            COMPLETED
    - rename WordType to Category                                               COMPLETED
    - create CategoryController                                                 COMPLETED
        - add pagination support                                                COMPLETED
        - add getAllCategories @Get method                                      COMPLETED

Implement support for irregular verbs.                                          COMPLETED
    - create basic functionality                                                COMPLETED
    - find them as txt or csv file                                              COMPLETED
    - translate them to Polish from German language                             COMPLETED
    - load them to database                                                     COMPLETED


4. Add security support (Bearer)
    - add dependency                                                            COMPLETED
    - create package dedicated for security only                                COMPLETED
    - create SecurityConfig class and SecurityFilterChain bean                  IN PROGRESS
    - add exception handling for access denied                                  COMPLETED
      @ExceptionHandler(AccessDeniedException.class)
    - create user and role entity class with relation ManyToMany                COMPLETED
    - create user and role repository                                           COMPLETED
    - create CustomUserDetailsService that implement UserDetailsService         COMPLETED
        - override method,                                                      COMPLETED
          get user from database,                                               COMPLETED
          get user roles from database Set<GrantedAuthority>,                   COMPLETED
          return new spring.User object                                         COMPLETED
    - create AuthenticationManager bean in config class                         COMPLETED
    - create admin and user roles and users in database                         COMPLETED
    - load roles to database with code on first run/deploy                      COMPLETED
    - implement login and register api                                          COMPLETED
    - implement JWT authentication                                              COMPLETED
        (USE BASIC AUTH TO RECEIVE TOKEN)


    - set permissions for each method in controller class
        - all get method should be accessible for everyone without registration
        - post method only for user
        - delete method only for user

    - add app constants - consider usage of enum
        - replace default props with constants in paginated responses




3. Add validation support
    - validate user login/register
        - no special characters or language specific characters in username
        - email validation
        - password A-z a-z 1-9 !@#$%^&* with at least one
            - capital letter
            - special character
            - number

    - make sure that all words added to database is lowercase character
        - prevent capital letters or write code that change every character to lower case
    - validate new words
        - no special characters in translations
        - allow dedicated language characters in Polish translation


5. Create logic for association between words and user
6. Limit how many word user can add. (maybe 100 per month)
7. Add Swagger support
8. Add 4000 essential words in english language

9. Create ReactApp with basic functionality
10. Add Google Translate Api or dictionary api or both
    -? all word added to database should be translated by google api
      and if match - word should be allowed in global database, if not should
      be stored as specific word for individual user

    -? use dictionary api to get necessary information about words https://dictionaryapi.dev/

11. Add statistics and suggestions support

12. Bring application to perfection and start thinking about deployment

Others(important)
- force all englishTranslation and polishTranslation fields to be lower case in React App
- think about mobile app